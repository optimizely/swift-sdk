language: minimal
os: linux

# Integration tests need to run first to reset the PR build status to pending
stages:
  - name: 'Lint markdown files'
  - name: 'Trigger Integration Tests'
    if: env(RUN_COMPAT_SUITE) = true
  - name: 'Benchmarking tests'
  - name: 'SourceClear and Lint'
  - name: 'Unit Tests'
  - name: 'Prepare for release'
    if: env(PREP) = true and type = api
  - name: 'Release'
    if: env(RELEASE) = true and type = api

jobs:
  include:
    - stage: 'Lint markdown files'
      language: ruby
      rvm: 2.4.1
      os: linux
      install: gem install awesome_bot
      script:
        - find . -type f -name '*.md' -exec awesome_bot {} \;
      notifications:
        email: false
    
    - &integrationtest
      stage: 'Trigger Integration Tests'
      language: minimal
      os: linux
      env:
        - SDK=swift
        - BUILD_NUMBER=${TRAVIS_JOB_NUMBER/.}
        - TESTAPP_TAG=master
        - SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
      cache: false
      install:
        - mkdir $HOME/travisci-tools && pushd $HOME/travisci-tools && git init && git pull https://$CI_USER_TOKEN@github.com/optimizely/travisci-tools.git && popd
      script:
        - $HOME/travisci-tools/trigger-script-with-status-update.sh
    
    - <<: *integrationtest
      stage: 'Benchmarking tests'
      env: SDK=swift FULLSTACK_TEST_REPO=Benchmarking BUILD_NUMBER=${TRAVIS_JOB_NUMBER/.} SDK_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH

    - stage: 'SourceClear and Lint'
      language: swift
      os: osx
      osx_image: xcode10.2
      install:
        - gem install cocoapods -v '1.8.0'
      script:
        - pod spec lint --quick
      after_script:
        - curl -sSL https://download.sourceclear.com/ci.sh | bash

    - &unittests
      stage: 'Unit Tests'
      language: swift
      os: osx
      osx_image: xcode10.2
      branches:
        only:
          - master
      env: SCHEME=OptimizelySwiftSDK-iOS TEST_SDK=iphonesimulator PLATFORM='iOS Simulator' OS=12.1 NAME='iPhone 7'
      name: PLATFORM='iOS Simulator' OS=12.1 NAME='iPhone 7'
      install:
        - gem install slather --no-document --quiet
        - gem install cocoapods -v '1.8.0'
        - pod repo update
        - pod install
        # fix simulator known issue (https://developer.apple.com/documentation/xcode_release_notes/xcode_10_2_1_release_notes)
        - sudo mkdir '/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 9.3.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift'
        # install jq without cleaning up
        - HOMEBREW_NO_INSTALL_CLEANUP=true brew install jq
        # preload simulator
        - Scripts/start_simulator.sh
      script:
        - if [[ "$TRAVIS_BRANCH" == "master" ]]; then xcodebuild test -workspace OptimizelySwiftSDK.xcworkspace -scheme $SCHEME -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -sdk $TEST_SDK -destination "platform=$PLATFORM,OS=$OS,name=$NAME" ONLY_ACTIVE_ARCH=YES | tee buildoutput | xcpretty && test ${PIPESTATUS[0]} -eq 0; fi
      after_success:
        # coverage collect for iOS only (.slather.yml)
        - if [[ "$PLATFORM" == "iOS Simulator" ]]; then slather; fi
        - sleep 5 # https://github.com/travis-ci/travis-ci/issues/4725
      after_failure:
        # install travis artifacts uploader
        - sudo curl -sL https://raw.githubusercontent.com/travis-ci/artifacts/master/install | bash
        - artifacts upload --target-paths "/${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER}/${TRAVIS_JOB_NUMBER}/xcodebuild_logs" $(find /Users/travis/Library/Developer/Xcode/ -name *.xcresult -o -name *.log)
        - artifacts upload --target-paths "/${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER}/${TRAVIS_JOB_NUMBER}/buildoutput" "$TRAVIS_BUILD_DIR/buildoutput"
    - <<: *unittests
      env: SCHEME=OptimizelySwiftSDK-iOS TEST_SDK=iphonesimulator PLATFORM='iOS Simulator' OS=11.4 NAME='iPhone 7 Plus'
      name: PLATFORM='iOS Simulator' OS=11.4 NAME='iPhone 7 Plus'
    - <<: *unittests
      env: SCHEME=OptimizelySwiftSDK-iOS TEST_SDK=iphonesimulator PLATFORM='iOS Simulator' OS=9.3 NAME='iPad Air'
      name: PLATFORM='iOS Simulator' OS=9.3 NAME='iPad Air'
    - <<: *unittests
      env: SCHEME=OptimizelySwiftSDK-tvOS TEST_SDK=appletvsimulator PLATFORM='tvOS Simulator' OS=12.1 NAME='Apple TV 4K'
      name: PLATFORM='tvOS Simulator' OS=12.1 NAME='Apple TV 4K'

    - stage: 'Prepare for release'
      name: Prepare for release
      language: swift
      os: osx
      osx_image: xcode10.2
      env:
        - VERSION=3.1.0
      install:
        # install hub
        - wget https://github.com/github/hub/releases/download/v2.11.2/hub-darwin-amd64-2.11.2.tgz -O /tmp/hub-darwin-amd64-2.11.2.tgz && tar -xvf /tmp/hub-darwin-amd64-2.11.2.tgz -C /usr/local/opt && ln -s /usr/local/opt/hub-darwin-amd64-2.11.2/bin/hub /usr/local/bin/hub
        # upgrade cocoapods
        - gem install cocoapods -v '1.8.0'
      script:
        - Scripts/run_prep.sh
      after_failure:
        - cat /tmp/build.out

    - stage: 'Release'
      name: Push to cocoapods.org
      language: minimal
      os: osx
      osx_image: xcode10.2
      env:
        - VERSION=3.1.0
      install:
        # install hub
        - wget https://github.com/github/hub/releases/download/v2.11.2/hub-darwin-amd64-2.11.2.tgz -O /tmp/hub-darwin-amd64-2.11.2.tgz && tar -xvf /tmp/hub-darwin-amd64-2.11.2.tgz -C /usr/local/opt && ln -s /usr/local/opt/hub-darwin-amd64-2.11.2/bin/hub /usr/local/bin/hub
        # upgrade cocoapods
        - gem install cocoapods -v '1.8.0'
      script:
        - Scripts/run_release.sh
